local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local localPlayer = Players.LocalPlayer
local playerGui = localPlayer:WaitForChild("PlayerGui")

_G.HitboxSize = 6
_G.HitboxEnabled = false
_G.OriginalHeads = {}

local CorrectKey = "2985"
local KeyVerified = false

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "HeadHitboxUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 240, 0, 210)
frame.Position = UDim2.new(0.5, -120, 0.1, 0)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui

Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 12)

local label = Instance.new("TextLabel", frame)
label.Size = UDim2.new(1, 0, 0.18, 0)
label.BackgroundTransparency = 1
label.Text = "Head Hitbox"
label.TextColor3 = Color3.new(1, 1, 1)
label.TextScaled = true
label.Font = Enum.Font.SourceSansBold

local keyBox = Instance.new("TextBox", frame)
keyBox.Size = UDim2.new(0.9, 0, 0, 28)
keyBox.Position = UDim2.new(0.05, 0, 0.25, 0)
keyBox.PlaceholderText = "Enter Key"
keyBox.Text = ""
keyBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
keyBox.TextColor3 = Color3.new(1, 1, 1)
keyBox.Font = Enum.Font.SourceSans
keyBox.TextScaled = true
Instance.new("UICorner", keyBox).CornerRadius = UDim.new(0, 8)

local submitButton = Instance.new("TextButton", frame)
submitButton.Size = UDim2.new(0.9, 0, 0, 28)
submitButton.Position = UDim2.new(0.05, 0, 0.42, 0)
submitButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
submitButton.TextColor3 = Color3.new(1, 1, 1)
submitButton.Font = Enum.Font.SourceSansBold
submitButton.Text = "Submit Key"
submitButton.TextScaled = true
Instance.new("UICorner", submitButton).CornerRadius = UDim.new(0, 8)

local toggleButton = Instance.new("TextButton", frame)
toggleButton.Size = UDim2.new(0.9, 0, 0, 28)
toggleButton.Position = UDim2.new(0.05, 0, 0.62, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextScaled = true
toggleButton.Text = "Enable Hitbox"
toggleButton.Visible = false
Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(0, 8)

local sizeBox = Instance.new("TextBox", frame)
sizeBox.Size = UDim2.new(0.6, 0, 0, 28)
sizeBox.Position = UDim2.new(0.2, 0, 0.8, 0)
sizeBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
sizeBox.TextColor3 = Color3.new(1, 1, 1)
sizeBox.TextScaled = true
sizeBox.Font = Enum.Font.SourceSans
sizeBox.Text = tostring(_G.HitboxSize)
sizeBox.ClearTextOnFocus = false
sizeBox.Visible = false
Instance.new("UICorner", sizeBox).CornerRadius = UDim.new(0, 8)

sizeBox.FocusLost:Connect(function(enterPressed)
	local val = tonumber(sizeBox.Text)
	if val and val >= 1 and val <= 50 then
		_G.HitboxSize = math.floor(val + 0.5)
	end
	sizeBox.Text = tostring(_G.HitboxSize)
end)

submitButton.MouseButton1Click:Connect(function()
	if keyBox.Text == CorrectKey then
		KeyVerified = true
		submitButton.Visible = false
		keyBox.Visible = false
		toggleButton.Visible = true
		sizeBox.Visible = true
	else
		keyBox.Text = "Wrong Key!"
	end
end)

toggleButton.MouseButton1Click:Connect(function()
	if not KeyVerified then return end
	_G.HitboxEnabled = not _G.HitboxEnabled
	toggleButton.Text = _G.HitboxEnabled and "Disable Hitbox" or "Enable Hitbox"

	if not _G.HitboxEnabled then
		for _, p in ipairs(Players:GetPlayers()) do
			if _G.OriginalHeads[p.Name] then
				local head = p.Character and p.Character:FindFirstChild("Head")
				if head then
					local data = _G.OriginalHeads[p.Name]
					head.Size = data.Size
					head.Transparency = data.Transparency
					head.BrickColor = data.BrickColor
					head.Material = data.Material
					head.CanCollide = data.CanCollide
					head.CanTouch = data.CanTouch
					head.CanQuery = data.CanQuery
				end
				_G.OriginalHeads[p.Name] = nil
			end
		end
	end
end)

local function isEnemy(player)
	local myTeam = localPlayer.Team and localPlayer.Team.Name
	local theirTeam = player.Team and player.Team.Name
	if not myTeam or not theirTeam then return false end
	if myTeam == "Prisoners" then
		return theirTeam == "Police" or theirTeam == "Heroes"
	elseif myTeam == "Police" then
		return theirTeam == "Prisoners" or theirTeam == "Criminals" or theirTeam == "Villains"
	elseif myTeam == "Criminals" or myTeam == "Villains" then
		return theirTeam == "Police" or theirTeam == "Heroes"
	end
	return false
end

local function applyHitbox(player)
	local character = player.Character
	if not character then return end
	local head = character:FindFirstChild("Head")
	local humanoid = character:FindFirstChildOfClass("Humanoid")
	if not head or not humanoid or humanoid.Sit then return end

	if not _G.OriginalHeads[player.Name] then
		_G.OriginalHeads[player.Name] = {
			Size = head.Size,
			Transparency = head.Transparency,
			BrickColor = head.BrickColor,
			Material = head.Material,
			CanCollide = head.CanCollide,
			CanTouch = head.CanTouch,
			CanQuery = head.CanQuery
		}
	end

	head.Size = Vector3.new(_G.HitboxSize, _G.HitboxSize, _G.HitboxSize)
	head.Transparency = 0.3
	head.BrickColor = BrickColor.new("Really red")
	head.Material = Enum.Material.Neon
	head.CanCollide = false
	head.CanTouch = false
	head.CanQuery = false
end

local function resetHitbox(player)
	local character = player.Character
	local head = character and character:FindFirstChild("Head")
	local data = _G.OriginalHeads[player.Name]
	if head and data then
		head.Size = data.Size
		head.Transparency = data.Transparency
		head.BrickColor = data.BrickColor
		head.Material = data.Material
		head.CanCollide = data.CanCollide
		head.CanTouch = data.CanTouch
		head.CanQuery = data.CanQuery
		_G.OriginalHeads[player.Name] = nil
	end
end

RunService.Heartbeat:Connect(function()
	if not _G.HitboxEnabled then return end
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= localPlayer then
			if isEnemy(player) then
				applyHitbox(player)
			else
				resetHitbox(player)
			end
		end
	end
end)

Players.PlayerRemoving:Connect(function(p)
	_G.OriginalHeads[p.Name] = nil
end)

-- UI Hide/Show
local visible = true
UserInputService.InputBegan:Connect(function(input, gp)
	if not gp and input.KeyCode == Enum.KeyCode.K then
		visible = not visible
		frame.Visible = visible
	end
end)
