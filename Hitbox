_G.HeadSize = 6
_G.HitboxEnabled = false

local KEY_REQUIRED = "2985"
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

StarterGui:SetCore("SendNotification", {
    Title = "Hitbox Changer",
    Text = "Loaded",
    Duration = 3,
})

_G.originalParts = {}
local oldGui = playerGui:FindFirstChild("HeadSizeScriptUI")
if oldGui then oldGui:Destroy() end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "HeadSizeScriptUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 220, 0, 180)
frame.Position = UDim2.new(0.5, -110, 0.1, 0)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui

local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 12)
frameCorner.Parent = frame

local label = Instance.new("TextLabel")
label.Size = UDim2.new(1, 0, 0.25, 0)
label.Position = UDim2.new(0, 0, 0, 0)
label.BackgroundTransparency = 1
label.Text = "Hitbox Changer"
label.TextColor3 = Color3.new(1, 1, 1)
label.TextScaled = true
label.Font = Enum.Font.SourceSansBold
label.Parent = frame

local keyBox = Instance.new("TextBox")
keyBox.Size = UDim2.new(0.8, 0, 0, 28)
keyBox.Position = UDim2.new(0.1, 0, 0.3, 0)
keyBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
keyBox.TextColor3 = Color3.fromRGB(255, 255, 255)
keyBox.TextScaled = true
keyBox.Font = Enum.Font.SourceSans
keyBox.ClearTextOnFocus = false
keyBox.PlaceholderText = "Enter Key"
keyBox.Text = ""
keyBox.TextStrokeTransparency = 0
keyBox.TextStrokeColor3 = Color3.new(0, 0, 0)
keyBox.Parent = frame

local unlockButton = Instance.new("TextButton")
unlockButton.Size = UDim2.new(0.8, 0, 0.18, 0)
unlockButton.Position = UDim2.new(0.1, 0, 0.55, 0)
unlockButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
unlockButton.TextColor3 = Color3.new(1, 1, 1)
unlockButton.Font = Enum.Font.SourceSansBold
unlockButton.TextScaled = true
unlockButton.Text = "Unlock GUI"
unlockButton.Parent = frame

local buttonCorner1 = Instance.new("UICorner")
buttonCorner1.CornerRadius = UDim.new(0, 10)
buttonCorner1.Parent = unlockButton

local function unlock()
    local enteredKey = keyBox.Text:match("^%s*(.-)%s*$")
    if enteredKey == KEY_REQUIRED then
        keyBox:Destroy()
        unlockButton:Destroy()
        createHitboxGui()
    else
        StarterGui:SetCore("SendNotification", {
            Title = "Key System",
            Text = "Invalid Key!",
            Duration = 2,
        })
    end
end

unlockButton.MouseButton1Click:Connect(unlock)

function createHitboxGui()
    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0.9, 0, 0.18, 0)
    toggleButton.Position = UDim2.new(0.05, 0, 0.3, 0)
    toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    toggleButton.TextColor3 = Color3.new(1, 1, 1)
    toggleButton.Font = Enum.Font.SourceSansBold
    toggleButton.TextScaled = true
    toggleButton.Text = "Enable Hitbox"
    toggleButton.Parent = frame

    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 10)
    buttonCorner.Parent = toggleButton

    local inputBox = Instance.new("TextBox")
    inputBox.Size = UDim2.new(0.6, 0, 0, 28)
    inputBox.Position = UDim2.new(0.2, 0, 0.58, 0)
    inputBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    inputBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    inputBox.TextScaled = true
    inputBox.Font = Enum.Font.SourceSans
    inputBox.ClearTextOnFocus = false
    inputBox.Text = tostring(_G.HeadSize)
    inputBox.Parent = frame
    inputBox.TextStrokeTransparency = 0
    inputBox.TextStrokeColor3 = Color3.new(0, 0, 0)

    inputBox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            local val = tonumber(inputBox.Text)
            if val and val >= 1 and val <= 50 then
                _G.HeadSize = math.floor(val + 0.5)
                inputBox.Text = tostring(_G.HeadSize)
            else
                inputBox.Text = tostring(_G.HeadSize)
            end
        end
    end)

    local uiVisible = true
    local tweenInfo = TweenInfo.new(0.4, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)

    UserInputService.InputBegan:Connect(function(input, isProcessed)
        if not isProcessed and input.KeyCode == Enum.KeyCode.K then
            uiVisible = not uiVisible
            local goal = {Position = uiVisible and UDim2.new(0.5, -110, 0.1, 0) or UDim2.new(0.5, -110, -0.3, 0)}
            TweenService:Create(frame, tweenInfo, goal):Play()
        end
    end)

    toggleButton.MouseButton1Click:Connect(function()
        _G.HitboxEnabled = not _G.HitboxEnabled
        toggleButton.Text = _G.HitboxEnabled and "Disable Hitbox" or "Enable Hitbox"
    end)
end

local function ResetRoot(root, data)
    pcall(function()
        root.Size = data.Size
        local visual = root:FindFirstChild("HitboxVisual")
        if visual then visual:Destroy() end
    end)
end

local function ApplyHitbox(root)
    pcall(function()
        root.Size = Vector3.new(_G.HeadSize, _G.HeadSize, _G.HeadSize)
        if not root:FindFirstChild("HitboxVisual") then
            local visual = Instance.new("SelectionBox")
            visual.Name = "HitboxVisual"
            visual.Adornee = root
            visual.LineThickness = 0.05
            visual.SurfaceTransparency = 0.9
            visual.Color3 = BrickColor.new("Really red").Color
            visual.Parent = root
        end
    end)
end

local function areEnemies(plr1, plr2)
    local t1 = plr1.Team
    local t2 = plr2.Team
    if not t1 or not t2 then return false end

    local a, b = t1.Name, t2.Name

    local allied = {
        ["Prisoners"] = {["Prisoners"] = true, ["Criminals"] = true, ["Villains"] = true},
        ["Criminals"] = {["Prisoners"] = true, ["Criminals"] = true, ["Villains"] = true},
        ["Villains"] = {["Prisoners"] = true, ["Criminals"] = true, ["Villains"] = true},
        ["Police"] = {["Police"] = true, ["Heroes"] = true},
        ["Heroes"] = {["Police"] = true, ["Heroes"] = true},
    }

    return not (allied[a] and allied[a][b])
end

local processed = {}
local lastUpdate = 0

RunService.Stepped:Connect(function(_, deltaTime)
    lastUpdate += deltaTime
    if lastUpdate < 1 then return end
    lastUpdate = 0

    table.clear(processed)

    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer ~= player and not processed[otherPlayer] then
            processed[otherPlayer] = true
            local char = otherPlayer.Character
            local humanoid = char and char:FindFirstChildOfClass("Humanoid")
            local root = char and char:FindFirstChild("HumanoidRootPart")

            if humanoid and root then
                local isSitting = humanoid.Sit
                local isEnemy = areEnemies(player, otherPlayer)

                if _G.HitboxEnabled and not isSitting and isEnemy then
                    if not _G.originalParts[otherPlayer.Name] then
                        _G.originalParts[otherPlayer.Name] = {
                            Size = root.Size
                        }
                    end
                    ApplyHitbox(root)
                elseif _G.originalParts[otherPlayer.Name] then
                    ResetRoot(root, _G.originalParts[otherPlayer.Name])
                    _G.originalParts[otherPlayer.Name] = nil
                end
            end
        end
    end
end)
