local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local localPlayer = Players.LocalPlayer
local playerGui = localPlayer:WaitForChild("PlayerGui")

_G.HitboxSize = 6
_G.HitboxEnabled = false
_G.OriginalHeads = {}

local CorrectKey = "2985"
local KeyVerified = false

local gui = Instance.new("ScreenGui", playerGui)
gui.Name = "HitboxGUI"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 300, 0, 220)
frame.Position = UDim2.new(0.5, -150, 0.4, -110)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 12)

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 40)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = "Hitbox Changer"
title.Font = Enum.Font.GothamBold
title.TextColor3 = Color3.new(1, 1, 1)
title.TextScaled = true

local keyBox = Instance.new("TextBox", frame)
keyBox.Size = UDim2.new(0.9, 0, 0, 30)
keyBox.Position = UDim2.new(0.05, 0, 0, 45)
keyBox.PlaceholderText = "Enter Key"
keyBox.Text = ""
keyBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
keyBox.TextColor3 = Color3.new(1, 1, 1)
keyBox.TextScaled = true
keyBox.Font = Enum.Font.Gotham
Instance.new("UICorner", keyBox).CornerRadius = UDim.new(0, 8)

local submitButton = Instance.new("TextButton", frame)
submitButton.Size = UDim2.new(0.9, 0, 0, 30)
submitButton.Position = UDim2.new(0.05, 0, 0, 85)
submitButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
submitButton.TextColor3 = Color3.new(1, 1, 1)
submitButton.Font = Enum.Font.GothamBold
submitButton.Text = "Submit Key"
submitButton.TextScaled = true
Instance.new("UICorner", submitButton).CornerRadius = UDim.new(0, 8)

local toggleButton = Instance.new("TextButton", frame)
toggleButton.Size = UDim2.new(0.9, 0, 0, 30)
toggleButton.Position = UDim2.new(0.05, 0, 0, 45)
toggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextScaled = true
toggleButton.Text = "Enable Hitbox"
toggleButton.Visible = false
Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(0, 8)

local sizeBox = Instance.new("TextBox", frame)
sizeBox.Size = UDim2.new(0.9, 0, 0, 30)
sizeBox.Position = UDim2.new(0.05, 0, 0, 85)
sizeBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
sizeBox.TextColor3 = Color3.new(1, 1, 1)
sizeBox.Text = tostring(_G.HitboxSize)
sizeBox.Font = Enum.Font.Gotham
sizeBox.TextScaled = true
sizeBox.ClearTextOnFocus = false
sizeBox.Visible = false
Instance.new("UICorner", sizeBox).CornerRadius = UDim.new(0, 8)

submitButton.MouseButton1Click:Connect(function()
	if keyBox.Text == CorrectKey then
		KeyVerified = true
		keyBox.Visible = false
		submitButton.Visible = false
		toggleButton.Visible = true
		sizeBox.Visible = true
	else
		keyBox.Text = "Wrong Key!"
	end
end)

sizeBox.FocusLost:Connect(function(enterPressed)
	local value = tonumber(sizeBox.Text)
	if value and value >= 1 and value <= 50 then
		_G.HitboxSize = math.floor(value + 0.5)
	end
	sizeBox.Text = tostring(_G.HitboxSize)
end)

toggleButton.MouseButton1Click:Connect(function()
	_G.HitboxEnabled = not _G.HitboxEnabled
	toggleButton.Text = _G.HitboxEnabled and "Disable Hitbox" or "Enable Hitbox"
	if not _G.HitboxEnabled then
		for _, p in ipairs(Players:GetPlayers()) do
			if _G.OriginalHeads[p.Name] then
				local head = p.Character and p.Character:FindFirstChild("Head")
				if head then
					local d = _G.OriginalHeads[p.Name]
					head.Size = d.Size
					head.Transparency = d.Transparency
					head.BrickColor = d.BrickColor
					head.Material = d.Material
					head.CanCollide = d.CanCollide
					head.CanTouch = d.CanTouch
					head.CanQuery = d.CanQuery
				end
				_G.OriginalHeads[p.Name] = nil
			end
		end
	end
end)

local function isEnemy(player)
	local myTeam = localPlayer.Team and localPlayer.Team.Name
	local theirTeam = player.Team and player.Team.Name
	if not myTeam or not theirTeam then return false end
	if myTeam == "Prisoners" then
		return theirTeam == "Police" or theirTeam == "Heroes"
	elseif myTeam == "Police" then
		return theirTeam == "Prisoners" or theirTeam == "Criminals" or theirTeam == "Villains"
	elseif myTeam == "Criminals" or myTeam == "Villains" then
		return theirTeam == "Police" or theirTeam == "Heroes"
	end
	return false
end

local function applyHitbox(player)
	local char = player.Character
	if not char then return end
	local head = char:FindFirstChild("Head")
	local hum = char:FindFirstChildOfClass("Humanoid")
	if not head or not hum or hum.Sit then return end
	if not _G.OriginalHeads[player.Name] then
		_G.OriginalHeads[player.Name] = {
			Size = head.Size,
			Transparency = head.Transparency,
			BrickColor = head.BrickColor,
			Material = head.Material,
			CanCollide = head.CanCollide,
			CanTouch = head.CanTouch,
			CanQuery = head.CanQuery
		}
	end
	head.Size = Vector3.new(_G.HitboxSize, _G.HitboxSize, _G.HitboxSize)
	head.Transparency = 0.3
	head.BrickColor = BrickColor.new("Really red")
	head.Material = Enum.Material.Neon
	head.CanCollide = false
	head.CanTouch = false
	head.CanQuery = false
end

local function resetHitbox(player)
	local head = player.Character and player.Character:FindFirstChild("Head")
	local d = _G.OriginalHeads[player.Name]
	if head and d then
		head.Size = d.Size
		head.Transparency = d.Transparency
		head.BrickColor = d.BrickColor
		head.Material = d.Material
		head.CanCollide = d.CanCollide
		head.CanTouch = d.CanTouch
		head.CanQuery = d.CanQuery
		_G.OriginalHeads[player.Name] = nil
	end
end

RunService.Heartbeat:Connect(function()
	if not _G.HitboxEnabled then return end
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= localPlayer then
			if isEnemy(player) then
				applyHitbox(player)
			else
				resetHitbox(player)
			end
		end
	end
end)

Players.PlayerRemoving:Connect(function(p)
	_G.OriginalHeads[p.Name] = nil
end)

UserInputService.InputBegan:Connect(function(input, gpe)
	if not gpe and input.KeyCode == Enum.KeyCode.K then
		frame.Visible = not frame.Visible
	end
end)
